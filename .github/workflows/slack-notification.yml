name: Github and Slack CI CD notification

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
    types: [opened, reopened, edited, ready_for_review, labeled, synchronize]

jobs:
  semantic-pr:
    uses: ./.github/workflows/semantic-pull-request.yml

  slack-workflow-status:
    if: always()
    needs:
      - semantic-pr
    runs-on: ubuntu-latest
    steps:
      - name: Send custom JSON data to Slack workflow
        uses: slackapi/slack-github-action@v1.24.0
        id: slack
        with:
          # For posting a rich message using Block Kit
          payload: |
            {
              "text": "GitHub Action build result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "GitHub branch status ${{ success() }} : ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}  hello"
                  }
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK

      # - name: Send custom JSON data to Slack workflow
      #   if: ${{ failure() }}
      #   uses: slackapi/slack-github-action@v1.24.0
      #   id: slack
      #   with:
      #     # For posting a rich message using Block Kit
      #     payload: |
      #       {
      #         "text": "GitHub Action build result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}",
      #         "blocks": [
      #           {
      #             "type": "section",
      #             "text": {
      #               "type": "mrkdwn",
      #               "text": "GitHub branch status ${{failure()}} : ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
      #             }
      #           }
      #         ]
      #       }
      #   env:
      #     SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      #     SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
